name: Run Hackolade CLI in CI
on:
    workflow_dispatch:
jobs:
 run-hackolade:
    runs-on: ubuntu-latest
    env:
        # License key must be anaged as a secret (Repository or Organization)
        HACKOLADE_KEY: ${{ secrets.HACKOLADE_LICENSE_KEY }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create logs and output directories
        id: create-logs-and-output-directories
        run: |
          mkdir -p output
          mkdir -p logs

      - name: Build Hackolade Docker image
        id: build-studio-cli-docker-image
        run: |
          docker build --no-cache --pull -t hackolade:latest .

      - name: Retrieve image identifier for GHA
        id: retrieve-identifier-for-hackolade-studio-licensing
        run: echo "identifier=$(docker compose run -i --rm --entrypoint show-computer-id.sh hackoladeStudioCLI)" >> $GITHUB_OUTPUT

      - name: Validate concurrent license
        id: validate-concurrent-hackolade-studio-license
        run: |
          docker compose run --rm hackoladeStudioCLI validatekey \
            --key "${{ env.HACKOLADE_KEY }}" \
            --identifier "${{ steps.retrieve-identifier-for-hackolade-studio-licensing.outputs.identifier }}"

      - name: Generate HTML documentation for travel.json example model
        id: generate-html-doc-travel-model
        run: |
          docker compose run --rm hackoladeStudioCLI genDoc \
            --model=/github/workspace/models/model.json \
            --format=HTML \
            --doc=/github/workspace/output/doc.html

      - name: Retrieve Hackolade output files from volume
        run: |
          docker run --rm --init \
            -u root \
            -v hackolade-studio-output:/output \
            -v "${PWD}/output:/output-on-host" \
            --entrypoint cp \
            hackolade:latest -r /output /output-on-host/.

      - name: Retrieve Hackolade logs from volume
        run: |
          docker run --rm --init \
            -u root \
            -v hackolade-studio-logs:/logs \
            -v "${PWD}/logs:/logs-on-host" \
            --entrypoint cp \
            hackolade:latest -r /logs /logs-on-host/.

      - name: Tear down
        run: |
          docker compose down -v
